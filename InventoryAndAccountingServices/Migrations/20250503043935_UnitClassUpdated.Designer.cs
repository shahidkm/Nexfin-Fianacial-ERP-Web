// <auto-generated />
using System;
using InventoryAndAccountingServices.Infrastructure.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryAndAccountingServices.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250503043935_UnitClassUpdated")]
    partial class UnitClassUpdated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.BankLedgerDetails", b =>
                {
                    b.Property<int>("LedgerId")
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IFSC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LedgerId");

                    b.ToTable("BankLedgerDetails");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.BillByBillDetails", b =>
                {
                    b.Property<int>("LedgerId")
                        .HasColumnType("int");

                    b.Property<int>("CreditPeriod")
                        .HasColumnType("int");

                    b.Property<bool>("IsBillByBillEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("ReferenceType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LedgerId");

                    b.ToTable("BillByBillDetails");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.DispatchDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeliveryNoteNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispatchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispatchedThrough")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FreightCharges")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LRNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId")
                        .IsUnique();

                    b.ToTable("DispatchDetails");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.GSTTaxDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CGSTPercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("IGSTPercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("SGSTPercent")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("VoucherItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VoucherItemId")
                        .IsUnique();

                    b.ToTable("GSTTaxDetails");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.Godown", b =>
                {
                    b.Property<int>("GodownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GodownId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GodownName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GodownId");

                    b.ToTable("Godowns");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.GstLedgerDetails", b =>
                {
                    b.Property<int>("LedgerId")
                        .HasColumnType("int");

                    b.Property<decimal>("GstRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GstType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HsnSacCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LedgerId");

                    b.ToTable("GstLedgerDetails");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.InventoryGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllocateInPurchase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Nature")
                        .HasColumnType("int");

                    b.Property<string>("NetBalance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentGroupId")
                        .HasColumnType("int");

                    b.Property<string>("SubLedger")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.HasIndex("ParentGroupId");

                    b.ToTable("InventoryGroups");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.InventoryLedger", b =>
                {
                    b.Property<int>("LedgerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LedgerId"));

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrCr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("LedgerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OpeningBalance")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("LedgerId");

                    b.HasIndex("GroupId");

                    b.ToTable("InventoryLedgers");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.StockCategory", b =>
                {
                    b.Property<int>("StockCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockCategoryId"));

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StockCategoryId");

                    b.ToTable("StockCategories");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.StockGroup", b =>
                {
                    b.Property<int>("StockGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockGroupId"));

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentGroupId")
                        .HasColumnType("int");

                    b.HasKey("StockGroupId");

                    b.HasIndex("ParentGroupId");

                    b.ToTable("StockGroups");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.StockItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("GstRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HsnSacCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsGstApplicable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OpeningQty")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OpeningRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Quantity")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("TypeOfSupply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.ToTable("StockItems");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.UnitOfMeasure", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuantityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitId");

                    b.ToTable("UnitOfMeasures");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Narration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("VoucherNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.VoucherEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EntryType")
                        .HasColumnType("int");

                    b.Property<int>("LedgerId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LedgerId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherEntries");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.VoucherItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherItems");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.BankLedgerDetails", b =>
                {
                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.InventoryLedger", "Ledger")
                        .WithOne("BankDetails")
                        .HasForeignKey("InventoryAndAccountingServices.Domain.Entities.BankLedgerDetails", "LedgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ledger");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.BillByBillDetails", b =>
                {
                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.InventoryLedger", "Ledger")
                        .WithOne("BillByBillDetails")
                        .HasForeignKey("InventoryAndAccountingServices.Domain.Entities.BillByBillDetails", "LedgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ledger");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.DispatchDetails", b =>
                {
                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.Voucher", "Voucher")
                        .WithOne("DispatchDetails")
                        .HasForeignKey("InventoryAndAccountingServices.Domain.Entities.DispatchDetails", "VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.GSTTaxDetail", b =>
                {
                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.VoucherItem", "VoucherItem")
                        .WithOne("GSTTaxDetail")
                        .HasForeignKey("InventoryAndAccountingServices.Domain.Entities.GSTTaxDetail", "VoucherItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoucherItem");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.GstLedgerDetails", b =>
                {
                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.InventoryLedger", "Ledger")
                        .WithOne("GstDetails")
                        .HasForeignKey("InventoryAndAccountingServices.Domain.Entities.GstLedgerDetails", "LedgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ledger");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.InventoryGroup", b =>
                {
                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.InventoryGroup", "ParentGroup")
                        .WithMany("ChildGroups")
                        .HasForeignKey("ParentGroupId");

                    b.Navigation("ParentGroup");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.InventoryLedger", b =>
                {
                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.InventoryGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.StockGroup", b =>
                {
                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.StockGroup", "ParentGroup")
                        .WithMany()
                        .HasForeignKey("ParentGroupId");

                    b.Navigation("ParentGroup");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.VoucherEntry", b =>
                {
                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.InventoryLedger", "Ledger")
                        .WithMany()
                        .HasForeignKey("LedgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.Voucher", "Voucher")
                        .WithMany("Entries")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ledger");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.VoucherItem", b =>
                {
                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.StockItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryAndAccountingServices.Domain.Entities.Voucher", "Voucher")
                        .WithMany("Items")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.InventoryGroup", b =>
                {
                    b.Navigation("ChildGroups");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.InventoryLedger", b =>
                {
                    b.Navigation("BankDetails");

                    b.Navigation("BillByBillDetails");

                    b.Navigation("GstDetails");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.Voucher", b =>
                {
                    b.Navigation("DispatchDetails");

                    b.Navigation("Entries");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("InventoryAndAccountingServices.Domain.Entities.VoucherItem", b =>
                {
                    b.Navigation("GSTTaxDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
